type setting
  ( int   : a
  , float : b
  )


atom python-extended grompp '''The gromacs pre-processor: prepares run files for mdrun'''
  in  ( file   conf              '''a .gro configuration file'''
      , file   mdp               '''a .mpp settings file'''
      , file   top               '''A .top topology file'''
      , ?int   gen_vel           '''here for backward compatibility'''
      , ?array include           '''array of files to include'''
      , ?array settings          '''array of settings'''
      , ?file  ndx               '''An .ndx index file'''
      )
  out ( file   tpr               '''the tpr file from mdrun'''
      , file   stdout            '''stdout generated during grompp run'''
      )
  options ( function : cpc.lib.gromacs.grompp
          , import   : cpc.lib.gromacs )



atom python-extended mdrun	'''Runs an MD simulation'''
  in  ( file    tpr             '''The tpr file generated by grompp'''
      , ?int    priority        '''An optional priority fo commands issued'''
      , ?string cmdline_options '''An optional string with command line options for mdrun'''
      )
  out ( file    conf            '''Output configuration (.gro) file'''
      , file    stderr          '''mdrun's standard error output'''
      , file    stdout          '''mdrun's standard output output'''
      , file    xtc             '''compressed (xtc) trajectory file'''
      , file    trr             '''full-precision (trr) trajectory file'''
      , file    edr             '''energy+measurements output file'''
      )
  options ( function       : cpc.lib.gromacs.mdrun
          , import         : cpc.lib.gromacs
          , persistant_dir : true )


network gmxtest
  in  ( file conf
      , file mdp
      , file top
	  , setting test
      )
  out ( file stdout
      , int a ) 
  {
    controller(grompp)
    c2 = mdrun ((grompp (in.conf, in.mdp, in.top)).out.tpr)
    out.stdout <- c2.out.stdout
	out.a <- in.test.a
  }


/# Ideas for controllers:

atom python-extended controller gmxtest '''some comment'''
  in  ( file conf
      , file mdp
      , file top
      )
  out ( file stdout ) 
  options (
    "option1" : "value1"
  )

network gmxtest controlledby grompp '''some comment'''
  in  ( file conf
      , file mdp
      , file top
      )
  out ( file stdout ) 
  {
    controller(grompp)
    c2 = mdrun ((grompp (in.conf, in.mdp, in.top)).out.tpr)
    out.stdout <- c2.out.stdout
  }

network gmxtest '''some comment'''
  attach controller someatom
  in  ( file conf
      , file mdp
      , file top
      )
  out ( file stdout ) 
  {
    controller(grompp)
    c2 = mdrun ((grompp (in.conf, in.mdp, in.top)).out.tpr)
    out.stdout <- c2.out.stdout
  }


#/